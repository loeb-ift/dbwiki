[
  {
    "batch": 1,
    "item": 3,
    "question": "哪些發票的銷售額排在前10%？",
    "original_sql": "WITH RankedInvoices AS (\n    SELECT \"Invoice ID\",\n           \"Sales\",\n           NTILE(10) OVER (ORDER BY \"Sales\" DESC) as sales_percentile\n    FROM SuperMarket_Analysis\n)\nSELECT \"Invoice ID\", \"Sales\"\nFROM RankedInvoices\nWHERE sales_percentile = 1\nORDER BY \"Sales\" DESC",
    "generated_sql": "WITH AllInvoices AS (\n    SELECT \"Invoice ID\", \"Sales\"\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Invoice ID\", \"Sales\"\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Invoice ID\", \"Sales\"\n    FROM SuperMarket_Analysis_part3\n),\nInvoiceTotals AS (\n    SELECT \"Invoice ID\",\n           SUM(\"Sales\") AS total_sales\n    FROM AllInvoices\n    GROUP BY \"Invoice ID\"\n),\nPctThreshold AS (\n    SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY total_sales) AS pct_90\n    FROM InvoiceTotals\n)\nSELECT it.\"Invoice ID\",\n       it.total_sales\nFROM InvoiceTotals it\nCROSS JOIN PctThreshold pt\nWHERE it.total_sales >= pt.pct_90\nORDER BY it.total_sales DESC;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.61",
    "execution_time": 47.78030490875244,
    "timestamp": "2025-10-12T01:47:55.306926"
  },
  {
    "batch": 1,
    "item": 4,
    "question": "超市資料中，男性與女性的平均購買量各是多少，與整體平均有何差異？",
    "original_sql": "WITH GenderAvgQty AS (\n    SELECT Gender, AVG(Quantity) AS avg_qty\n    FROM SuperMarket_Analysis\n    GROUP BY Gender\n),\nOverallAvgQty AS (\n    SELECT AVG(Quantity) AS overall_avg_qty\n    FROM SuperMarket_Analysis\n)\nSELECT gaq.Gender,\n       gaq.avg_qty,\n       oaq.overall_avg_qty,\n       (gaq.avg_qty - oaq.overall_avg_qty) AS difference_from_overall_avg\nFROM GenderAvgQty gaq, OverallAvgQty oaq\nORDER BY gaq.avg_qty DESC",
    "generated_sql": "SELECT AVG(Quantity) FROM (\n         SELECT Quantity FROM SuperMarket_Analysis_part1\n         UNION ALL\n         SELECT Quantity FROM SuperMarket_Analysis_part2\n         UNION ALL\n         SELECT Quantity FROM SuperMarket_Analysis_part3\n     ))                                   AS overall_avg_quantity,\n    AVG(Quantity) - (\n        SELECT AVG(Quantity) FROM (\n            SELECT Quantity FROM SuperMarket_Analysis_part1\n            UNION ALL\n            SELECT Quantity FROM SuperMarket_Analysis_part2\n            UNION ALL\n            SELECT Quantity FROM SuperMarket_Analysis_part3\n        )\n    )                                       AS difference_from_overall\nFROM (\n    SELECT Gender, Quantity FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT Gender, Quantity FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT Gender, Quantity FROM SuperMarket_Analysis_part3\n) AS all_data\nGROUP BY Gender;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.42",
    "execution_time": 14.41749095916748,
    "timestamp": "2025-10-12T01:48:11.730595"
  },
  {
    "batch": 1,
    "item": 9,
    "question": "2025 年 1 月各日的銷售額、累計銷售額以及與前一日的差額為何？",
    "original_sql": "SELECT sales_day,\n       total_sales,\n       SUM(total_sales) OVER (ORDER BY sales_day) AS running_total_sales,\n       total_sales - LAG(total_sales, 1, 0) OVER (ORDER BY sales_day) AS daily_sales_difference\nFROM (\n    SELECT DATE(\"Date\") AS sales_day, SUM(\"Sales\") AS total_sales\n    FROM SuperMarket_Analysis\n    WHERE \"Date\" LIKE '2025-01%'\n    GROUP BY DATE(\"Date\")\n) AS daily_sales\nORDER BY sales_day",
    "generated_sql": "WITH all_sales AS (\n    SELECT \"Date\", SUM(\"Sales\") AS daily_sales\n    FROM (\n        SELECT \"Date\", \"Sales\" FROM SuperMarket_Analysis_part1\n        UNION ALL\n        SELECT \"Date\", \"Sales\" FROM SuperMarket_Analysis_part2\n        UNION ALL\n        SELECT \"Date\", \"Sales\" FROM SuperMarket_Analysis_part3\n    ) AS t\n    WHERE \"Date\" BETWEEN '2025-01-01' AND '2025-01-31'\n    GROUP BY \"Date\"\n)\nSELECT\n    \"Date\",\n    daily_sales,\n    SUM(daily_sales) OVER (ORDER BY \"Date\") AS cumulative_sales,\n    daily_sales - LAG(daily_sales) OVER (ORDER BY \"Date\") AS diff_from_prev_day\nFROM all_sales\nORDER BY \"Date\";",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.65",
    "execution_time": 13.643051862716675,
    "timestamp": "2025-10-12T01:49:25.588287"
  },
  {
    "batch": 1,
    "item": 10,
    "question": "各顧客類型中高消費者和低消費者各有多少人？每個類型的平均銷售額為何？",
    "original_sql": "WITH CustomerSpending AS (\n    SELECT \"Customer type\",\n           \"Sales\",\n           CASE\n               WHEN \"Sales\" >= (SELECT AVG(\"Sales\") FROM SuperMarket_Analysis) THEN 'High Spender'\n               ELSE 'Low Spender'\n           END AS spending_category\n    FROM SuperMarket_Analysis\n)\nSELECT \"Customer type\",\n       SUM(CASE WHEN spending_category = 'High Spender' THEN 1 ELSE 0 END) AS high_spenders_count,\n       SUM(CASE WHEN spending_category = 'Low Spender' THEN 1 ELSE 0 END) AS low_spenders_count,\n       COUNT(*) AS total_customers,\n       AVG(\"Sales\") AS average_sales_per_customer_type\nFROM SuperMarket_Analysis\nGROUP BY \"Customer type\"\nORDER BY \"Customer type\"",
    "generated_sql": "WITH all_sales AS (\n    SELECT \"Customer type\", \"Sales\"\n    FROM SuperMarket_Analysis_part1\n\n    UNION ALL\n\n    SELECT \"Customer type\", \"Sales\"\n    FROM SuperMarket_Analysis_part2\n\n    UNION ALL\n\n    SELECT \"Customer type\", \"Sales\"\n    FROM SuperMarket_Analysis_part3\n),\n\n-- 2. 取得整體平均銷售額 (用於判斷高/低消費者)\noverall_avg AS (\n    SELECT AVG(\"Sales\") AS avg_sales\n    FROM all_sales\n),\n\n-- 3. 依「高消費者」與「低消費者」分類，並計算每類別的人數與平均銷售額\nspending_summary AS (\n    SELECT\n        s.\"Customer type\",\n        SUM(CASE WHEN s.\"Sales\" > o.avg_sales THEN 1 ELSE 0 END)   AS high_spender_count,\n        SUM(CASE WHEN s.\"Sales\" <= o.avg_sales THEN 1 ELSE 0 END)  AS low_spender_count,\n        AVG(s.\"Sales\")                                          AS avg_sales_per_type\n    FROM all_sales s\n    CROSS JOIN overall_avg o\n    GROUP BY s.\"Customer type\"\n)\n\n-- 4. 取得最終結果\nSELECT\n    \"Customer type\",\n    high_spender_count,\n    low_spender_count,\n    avg_sales_per_type\nFROM spending_summary\nORDER BY \"Customer type\";",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.23",
    "execution_time": 26.539029121398926,
    "timestamp": "2025-10-12T01:49:54.129089"
  },
  {
    "batch": 2,
    "item": 2,
    "question": "各城市中各產品線的銷售額佔該城市總銷售額的百分比是多少？",
    "original_sql": "WITH CityProductLineSales AS (\n    SELECT City,\n           \"Product line\",\n           SUM(\"Sales\") AS product_line_sales,\n           SUM(SUM(\"Sales\")) OVER (PARTITION BY City) AS city_total_sales\n    FROM SuperMarket_Analysis\n    GROUP BY City, \"Product line\"\n)\nSELECT City,\n       \"Product line\",\n       product_line_sales,\n       (product_line_sales * 100.0 / city_total_sales) AS percentage_of_city_sales\nFROM CityProductLineSales\nORDER BY City, product_line_sales DESC",
    "generated_sql": "WITH AllSales AS (\n    SELECT City, \"Product line\", SUM(Sales) AS line_sales\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT City, \"Product line\", SUM(Sales) AS line_sales\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT City, \"Product line\", SUM(Sales) AS line_sales\n    FROM SuperMarket_Analysis_part3\n),\nCityTotals AS (\n    SELECT City, SUM(line_sales) AS city_total\n    FROM AllSales\n    GROUP BY City\n)\nSELECT\n    a.City,\n    a.\"Product line\",\n    a.line_sales,\n    (a.line_sales * 100.0 / c.city_total) AS pct_of_city_sales\nFROM AllSales a\nJOIN CityTotals c ON a.City = c.City\nORDER BY a.City, a.line_sales DESC;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.68",
    "execution_time": 10.32096004486084,
    "timestamp": "2025-10-12T01:50:23.857982"
  },
  {
    "batch": 2,
    "item": 3,
    "question": "各分店各支付方式的平均銷售額與該分店整體平均銷售額相差多少？",
    "original_sql": "WITH BranchPaymentSales AS (\n    SELECT Branch,\n           Payment,\n           AVG(\"Sales\") AS avg_payment_sales,\n           AVG(AVG(\"Sales\")) OVER (PARTITION BY Branch) AS branch_overall_avg_sales\n    FROM SuperMarket_Analysis\n    GROUP BY Branch, Payment\n)\nSELECT Branch,\n       Payment,\n       avg_payment_sales,\n       branch_overall_avg_sales,\n       (avg_payment_sales - branch_overall_avg_sales) AS difference_from_branch_avg\nFROM BranchPaymentSales\nORDER BY Branch, avg_payment_sales DESC",
    "generated_sql": "WITH AllSales AS (\n    SELECT Branch, Payment, Sales FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT Branch, Payment, Sales FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT Branch, Payment, Sales FROM SuperMarket_Analysis_part3\n),\n\nAvgPerBranchPayment AS (\n    SELECT Branch, Payment, AVG(Sales) AS avg_sales\n    FROM AllSales\n    GROUP BY Branch, Payment\n),\n\nAvgPerBranch AS (\n    SELECT Branch, AVG(Sales) AS branch_avg_sales\n    FROM AllSales\n    GROUP BY Branch\n)\n\nSELECT\n    abp.Branch,\n    abp.Payment,\n    abp.avg_sales,\n    ab.branch_avg_sales,\n    abp.avg_sales - ab.branch_avg_sales AS diff\nFROM AvgPerBranchPayment abp\nJOIN AvgPerBranch ab ON abp.Branch = ab.Branch\nORDER BY abp.Branch, abp.Payment;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.58",
    "execution_time": 12.588555097579956,
    "timestamp": "2025-10-12T01:50:38.453129"
  },
  {
    "batch": 2,
    "item": 4,
    "question": "不同性別顧客中，各產品線哪個平均評分最高？",
    "original_sql": "WITH GenderProductLineRating AS (\n    SELECT Gender,\n           \"Product line\",\n           AVG(Rating) AS avg_rating\n    FROM SuperMarket_Analysis\n    GROUP BY Gender, \"Product line\"\n)\nSELECT gplr.Gender,\n       gplr.\"Product line\",\n       gplr.avg_rating\nFROM GenderProductLineRating gplr\nJOIN (\n    SELECT Gender, MAX(avg_rating) AS max_avg_rating\n    FROM GenderProductLineRating\n    GROUP BY Gender\n) AS max_ratings_per_gender\nON gplr.Gender = max_ratings_per_gender.Gender AND gplr.avg_rating = max_ratings_per_gender.max_avg_rating\nORDER BY gplr.Gender, gplr.avg_rating DESC",
    "generated_sql": "WITH avg_rating AS (\n    SELECT Gender,\n           \"Product line\",\n           AVG(Rating) AS avg_rating\n    FROM SuperMarket_Analysis\n    GROUP BY Gender, \"Product line\"\n),\nranked AS (\n    SELECT Gender,\n           \"Product line\",\n           avg_rating,\n           ROW_NUMBER() OVER (PARTITION BY Gender ORDER BY avg_rating DESC) AS rn\n    FROM avg_rating\n)\nSELECT Gender,\n       \"Product line\",\n       avg_rating\nFROM ranked\nWHERE rn = 1;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.65",
    "execution_time": 9.72894835472107,
    "timestamp": "2025-10-12T01:50:50.187421"
  },
  {
    "batch": 2,
    "item": 7,
    "question": "哪些產品線的交易中，銷售額高於該產品線平均值？超過平均值的筆數各是多少？",
    "original_sql": "WITH ProductLineAvgSales AS (\n    SELECT \"Product line\", AVG(\"Sales\") AS avg_sales_per_product_line\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n)\nSELECT s.\"Product line\",\n       COUNT(s.\"Invoice ID\") AS transactions_above_average\nFROM SuperMarket_Analysis s\nJOIN ProductLineAvgSales plas\nON s.\"Product line\" = plas.\"Product line\"\nWHERE s.\"Sales\" > plas.avg_sales_per_product_line\nGROUP BY s.\"Product line\"\nORDER BY transactions_above_average DESC",
    "generated_sql": "WITH all_sales AS (\n    SELECT \"Product line\", \"Sales\"\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Product line\", \"Sales\"\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Product line\", \"Sales\"\n    FROM SuperMarket_Analysis_part3\n),\navg_sales AS (\n    SELECT \"Product line\", AVG(\"Sales\") AS avg_sales\n    FROM all_sales\n    GROUP BY \"Product line\"\n),\nabove_avg_counts AS (\n    SELECT a.\"Product line\",\n           COUNT(*) AS transactions_above_avg\n    FROM all_sales a\n    JOIN avg_sales av ON a.\"Product line\" = av.\"Product line\"\n    WHERE a.\"Sales\" > av.avg_sales\n    GROUP BY a.\"Product line\"\n)\nSELECT *\nFROM above_avg_counts\nORDER BY transactions_above_avg DESC;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.67",
    "execution_time": 17.544779062271118,
    "timestamp": "2025-10-12T01:51:50.566173"
  },
  {
    "batch": 2,
    "item": 9,
    "question": "各門市各產品線中，銷售額最高與最低的是哪些？",
    "original_sql": "WITH BranchProductLineSales AS (\n    SELECT Branch,\n           \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           RANK() OVER (PARTITION BY Branch ORDER BY SUM(\"Sales\") DESC) AS rank_desc,\n           RANK() OVER (PARTITION BY Branch ORDER BY SUM(\"Sales\") ASC) AS rank_asc\n    FROM SuperMarket_Analysis\n    GROUP BY Branch, \"Product line\"\n)\nSELECT Branch,\n       \"Product line\",\n       total_sales,\n       CASE\n           WHEN rank_desc = 1 THEN 'Highest Sales'\n           WHEN rank_asc = 1 THEN 'Lowest Sales'\n           ELSE NULL\n       END AS sales_category\nFROM BranchProductLineSales\nWHERE rank_desc = 1 OR rank_asc = 1\nORDER BY Branch, sales_category DESC",
    "generated_sql": "SELECT \n    Branch,\n    \"Product line\",\n    MAX(Sales) AS highest_sales,\n    MIN(Sales) AS lowest_sales\nFROM \n    SuperMarket_Analysis\nGROUP BY \n    Branch,\n    \"Product line\"\nORDER BY \n    Branch,\n    \"Product line\";",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.32",
    "execution_time": 10.118351936340332,
    "timestamp": "2025-10-12T01:52:14.431859"
  },
  {
    "batch": 3,
    "item": 4,
    "question": "每個產品線的平均單價、平均銷售量與平均銷售額各是多少？",
    "original_sql": "SELECT \"Product line\",\n       AVG(\"Unit price\") AS avg_unit_price,\n       AVG(Quantity) AS avg_quantity,\n       AVG(\"Sales\") AS avg_sales\nFROM SuperMarket_Analysis\nGROUP BY \"Product line\"\nORDER BY \"Product line\"",
    "generated_sql": "SELECT \"Product line\", \"Unit price\", \"Quantity\", \"Sales\" FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Product line\", \"Unit price\", \"Quantity\", \"Sales\" FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Product line\", \"Unit price\", \"Quantity\", \"Sales\" FROM SuperMarket_Analysis_part3\n)\nGROUP BY \"Product line\"\nORDER BY \"Product line\";",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.65",
    "execution_time": 15.381208658218384,
    "timestamp": "2025-10-12T01:53:24.641314"
  },
  {
    "batch": 3,
    "item": 6,
    "question": "各產品線的總銷售額、毛利金額及毛利率與全體平均值相比，差距為何？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n),\nOverallMetrics AS (\n    SELECT AVG(total_sales) AS overall_avg_sales,\n           AVG(total_gross_income) AS overall_avg_gross_income,\n           AVG(gross_margin_percentage) AS overall_avg_gross_margin_percentage\n    FROM ProductLineMetrics\n)\nSELECT plm.\"Product line\",\n       plm.total_sales,\n       plm.total_gross_income,\n       plm.gross_margin_percentage,\n       (plm.total_sales - om.overall_avg_sales) AS sales_difference_from_avg,\n       (plm.gross_margin_percentage - om.overall_avg_gross_margin_percentage) AS gross_margin_difference_from_avg\nFROM ProductLineMetrics plm, OverallMetrics om\nORDER BY plm.total_sales DESC",
    "generated_sql": "WITH all_sales AS (\n    SELECT \"Product line\", \"Sales\", \"gross income\"\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Product line\", \"Sales\", \"gross income\"\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Product line\", \"Sales\", \"gross income\"\n    FROM SuperMarket_Analysis_part3\n),\n\n-- 2️⃣ 依產品線彙總總銷售額、總毛利金額  \nproduct_line_metrics AS (\n    SELECT\n        \"Product line\",\n        SUM(\"Sales\")                           AS total_sales,\n        SUM(\"gross income\")                    AS total_gross_income,\n        (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM all_sales\n    GROUP BY \"Product line\"\n),\n\n-- 3️⃣ 計算整體平均銷售額與毛利率  \noverall_avg AS (\n    SELECT\n        AVG(total_sales)          AS avg_sales,\n        AVG(gross_margin_percentage) AS avg_gross_margin_percentage\n    FROM product_line_metrics\n)\n\n-- 4️⃣ 將差異合併回產品線表  \nSELECT\n    plm.\"Product line\",\n    ROUND(plm.total_sales, 2)                          AS total_sales,\n    ROUND(plm.total_gross_income, 2)                   AS total_gross_income,\n    ROUND(plm.gross_margin_percentage, 2)             AS gross_margin_percentage,\n    ROUND(plm.total_sales - oa.avg_sales, 2)           AS sales_difference_from_avg,\n    ROUND(plm.gross_margin_percentage - oa.avg_gross_margin_percentage, 2)\n                                                     AS gross_margin_difference_from_avg\nFROM product_line_metrics plm\nCROSS JOIN overall_avg oa\nORDER BY plm.gross_margin_percentage DESC, plm.total_sales DESC;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.30",
    "execution_time": 17.078483819961548,
    "timestamp": "2025-10-12T01:54:02.611573"
  },
  {
    "batch": 3,
    "item": 9,
    "question": "各城市中，哪種付款方式的銷售額最高？",
    "original_sql": "WITH CityPaymentSales AS (\n    SELECT City,\n           Payment,\n           SUM(\"Sales\") AS total_sales\n    FROM SuperMarket_Analysis\n    GROUP BY City, Payment\n),\nRankedCityPaymentSales AS (\n    SELECT City,\n           Payment,\n           total_sales,\n           RANK() OVER (PARTITION BY City ORDER BY total_sales DESC) AS payment_rank\n    FROM CityPaymentSales\n)\nSELECT City, Payment, total_sales\nFROM RankedCityPaymentSales\nWHERE payment_rank = 1\nORDER BY City",
    "generated_sql": "WITH CityPaymentSales AS (\n    SELECT \n        City,\n        Payment,\n        SUM(\"Sales\") AS total_sales\n    FROM SuperMarket_Analysis\n    GROUP BY City, Payment\n),\nMaxSalesPerCity AS (\n    SELECT \n        City,\n        MAX(total_sales) AS max_sales\n    FROM CityPaymentSales\n    GROUP BY City\n)\nSELECT \n    cps.City,\n    cps.Payment,\n    cps.total_sales\nFROM CityPaymentSales cps\nJOIN MaxSalesPerCity mps\n    ON cps.City = mps.City\n   AND cps.total_sales = mps.max_sales\nORDER BY cps.City;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.64",
    "execution_time": 9.752542972564697,
    "timestamp": "2025-10-12T01:54:41.950656"
  },
  {
    "batch": 4,
    "item": 1,
    "question": "各城市哪一天的日銷售額最高？",
    "original_sql": "WITH DailyCitySales AS (\n    SELECT City,\n           DATE(\"Date\") AS sales_date,\n           SUM(\"Sales\") AS daily_sales\n    FROM SuperMarket_Analysis\n    GROUP BY City, DATE(\"Date\")\n),\nRankedDailyCitySales AS (\n    SELECT City,\n           sales_date,\n           daily_sales,\n           RANK() OVER (PARTITION BY City ORDER BY daily_sales DESC) AS date_rank\n    FROM DailyCitySales\n)\nSELECT City, sales_date, daily_sales\nFROM RankedDailyCitySales\nWHERE date_rank = 1\nORDER BY City",
    "generated_sql": "WITH AllSales AS (\n    SELECT City,\n           DATE(\"Date\") AS sale_date,   -- ensure only date part\n           SUM(\"Sales\") AS daily_sales\n    FROM (\n        SELECT City, \"Date\", \"Sales\" FROM SuperMarket_Analysis_part1\n        UNION ALL\n        SELECT City, \"Date\", \"Sales\" FROM SuperMarket_Analysis_part2\n        UNION ALL\n        SELECT City, \"Date\", \"Sales\" FROM SuperMarket_Analysis_part3\n    )\n    GROUP BY City, sale_date\n),\nRankedDailySales AS (\n    SELECT City,\n           sale_date,\n           daily_sales,\n           RANK() OVER (PARTITION BY City ORDER BY daily_sales DESC) AS sales_rank\n    FROM AllSales\n)\nSELECT City,\n       sale_date,\n       daily_sales\nFROM RankedDailySales\nWHERE sales_rank = 1\nORDER BY City;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.22",
    "execution_time": 8.836586952209473,
    "timestamp": "2025-10-12T01:55:07.195565"
  },
  {
    "batch": 4,
    "item": 2,
    "question": "哪一個產品線的毛利率最高？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n)\nSELECT \"Product line\",\n       total_sales,\n       total_gross_income,\n       gross_margin_percentage\nFROM ProductLineMetrics\nORDER BY gross_margin_percentage DESC\nLIMIT 1",
    "generated_sql": "SELECT product_line,\n       avg_gross_margin_percentage\nFROM (\n    SELECT \"Product line\"  AS product_line,\n           AVG(\"gross margin percentage\") AS avg_gross_margin_percentage\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Product line\",\n           AVG(\"gross margin percentage\")\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Product line\",\n           AVG(\"gross margin percentage\")\n    FROM SuperMarket_Analysis_part3\n) AS sub\nGROUP BY product_line\nORDER BY avg_gross_margin_percentage DESC\nLIMIT 1;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.52",
    "execution_time": 11.49731707572937,
    "timestamp": "2025-10-12T01:55:20.699348"
  },
  {
    "batch": 4,
    "item": 6,
    "question": "哪一條產品線的毛利率最低？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n)\nSELECT \"Product line\",\n       total_sales,\n       total_gross_income,\n       gross_margin_percentage\nFROM ProductLineMetrics\nORDER BY gross_margin_percentage ASC\nLIMIT 1",
    "generated_sql": "WITH AllData AS (\n    SELECT \"Product line\", \"gross margin percentage\"\n    FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT \"Product line\", \"gross margin percentage\"\n    FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT \"Product line\", \"gross margin percentage\"\n    FROM SuperMarket_Analysis_part3\n)\nSELECT \"Product line\",\n       AVG(\"gross margin percentage\") AS avg_gross_margin_percentage\nFROM AllData\nGROUP BY \"Product line\"\nORDER BY avg_gross_margin_percentage\nLIMIT 1;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.52",
    "execution_time": 15.366372108459473,
    "timestamp": "2025-10-12T01:56:29.147920"
  },
  {
    "batch": 4,
    "item": 7,
    "question": "各城市銷售量最低的產品線是什麼？佔該城市總銷售額的百分比為多少？",
    "original_sql": "WITH CityProductLineSales AS (\n    SELECT City,\n           \"Product line\",\n           SUM(\"Sales\") AS product_line_sales,\n           SUM(SUM(\"Sales\")) OVER (PARTITION BY City) AS city_total_sales\n    FROM SuperMarket_Analysis\n    GROUP BY City, \"Product line\"\n),\nRankedCityProductLineSales AS (\n    SELECT City,\n           \"Product line\",\n           product_line_sales,\n           city_total_sales,\n           RANK() OVER (PARTITION BY City ORDER BY product_line_sales ASC) AS sales_rank\n    FROM CityProductLineSales\n)\nSELECT City,\n       \"Product line\",\n       product_line_sales,\n       (product_line_sales * 100.0 / city_total_sales) AS percentage_of_city_sales\nFROM RankedCityProductLineSales\nWHERE sales_rank = 1\nORDER BY City",
    "generated_sql": "WITH all_sales AS (\n    SELECT City,\n           \"Product line\",\n           SUM(Quantity) AS total_qty,\n           SUM(Sales)    AS total_sales\n    FROM (\n        SELECT City, \"Product line\", Quantity, Sales FROM SuperMarket_Analysis_part1\n        UNION ALL\n        SELECT City, \"Product line\", Quantity, Sales FROM SuperMarket_Analysis_part2\n        UNION ALL\n        SELECT City, \"Product line\", Quantity, Sales FROM SuperMarket_Analysis_part3\n    ) AS t\n    GROUP BY City, \"Product line\"\n),\ncity_totals AS (\n    SELECT City,\n           SUM(total_qty)  AS city_qty,\n           SUM(total_sales) AS city_sales\n    FROM all_sales\n    GROUP BY City\n),\ncity_min_qty AS (\n    SELECT a.City,\n           a.\"Product line\",\n           a.total_qty,\n           a.total_sales,\n           c.city_sales\n    FROM all_sales a\n    JOIN city_totals c ON a.City = c.City\n    WHERE a.total_qty = (\n        SELECT MIN(total_qty)\n        FROM all_sales\n        WHERE City = a.City\n    )\n)\nSELECT\n    City,\n    \"Product line\",\n    total_qty,\n    ROUND((total_sales / city_sales) * 100, 2) AS percent_of_city_total_sales\nFROM city_min_qty\nORDER BY City;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.52",
    "execution_time": 19.808162927627563,
    "timestamp": "2025-10-12T01:56:50.962419"
  },
  {
    "batch": 4,
    "item": 10,
    "question": "哪些產品線的毛利率高於全體平均毛利率？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n),\nOverallAvgGrossMargin AS (\n    SELECT AVG(gross_margin_percentage) AS overall_avg_gross_margin_percentage\n    FROM ProductLineMetrics\n)\nSELECT plm.\"Product line\",\n       plm.total_sales,\n       plm.total_gross_income,\n       plm.gross_margin_percentage\nFROM ProductLineMetrics plm, OverallAvgGrossMargin oagm\nWHERE plm.gross_margin_percentage > oagm.overall_avg_gross_margin_percentage\nORDER BY plm.gross_margin_percentage DESC",
    "generated_sql": "WITH ProductLineGMP AS (\n    SELECT \"Product line\",\n           AVG(\"gross margin percentage\") AS avg_gmp\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n)\nSELECT plg.\"Product line\",\n       plg.avg_gmp\nFROM ProductLineGMP plg\nWHERE plg.avg_gmp > (\n    SELECT AVG(\"gross margin percentage\")\n    FROM SuperMarket_Analysis\n);",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.44",
    "execution_time": 13.56241774559021,
    "timestamp": "2025-10-12T01:57:40.806797"
  },
  {
    "batch": 5,
    "item": 6,
    "question": "哪些產品線的總銷售額與毛利率都高於整體平均值？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n),\nOverallAvgMetrics AS (\n    SELECT AVG(total_sales) AS overall_avg_sales,\n           AVG(gross_margin_percentage) AS overall_avg_gross_margin_percentage\n    FROM ProductLineMetrics\n)\nSELECT plm.\"Product line\",\n       plm.total_sales,\n       plm.total_gross_income,\n       plm.gross_margin_percentage\nFROM ProductLineMetrics plm, OverallAvgMetrics oam\nWHERE plm.gross_margin_percentage > oam.overall_avg_gross_margin_percentage\n  AND plm.total_sales > oam.overall_avg_sales\nORDER BY plm.gross_margin_percentage DESC, plm.total_sales DESC",
    "generated_sql": "WITH All AS (\n    SELECT * FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT * FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT * FROM SuperMarket_Analysis_part3\n),\n\n-- Statistics per product line\nProductLineStats AS (\n    SELECT \n        \"Product line\",\n        SUM(\"Sales\") AS total_sales,\n        AVG(\"gross margin percentage\") AS avg_gross_margin_percentage\n    FROM All\n    GROUP BY \"Product line\"\n),\n\n-- Overall averages across all product lines\nOverallAverages AS (\n    SELECT \n        AVG(total_sales) AS avg_total_sales,\n        AVG(avg_gross_margin_percentage) AS avg_gross_margin_percentage\n    FROM ProductLineStats\n)\n\nSELECT \n    pls.\"Product line\",\n    pls.total_sales,\n    pls.avg_gross_margin_percentage\nFROM ProductLineStats pls\nCROSS JOIN OverallAverages oa\nWHERE pls.total_sales > oa.avg_total_sales\n  AND pls.avg_gross_margin_percentage > oa.avg_gross_margin_percentage;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.14",
    "execution_time": 18.95140314102173,
    "timestamp": "2025-10-12T02:00:10.462677"
  },
  {
    "batch": 5,
    "item": 10,
    "question": "哪些產品線的銷售額與毛利率都低於整體平均值？",
    "original_sql": "WITH ProductLineMetrics AS (\n    SELECT \"Product line\",\n           SUM(\"Sales\") AS total_sales,\n           SUM(\"gross income\") AS total_gross_income,\n           (SUM(\"gross income\") * 100.0 / SUM(\"Sales\")) AS gross_margin_percentage\n    FROM SuperMarket_Analysis\n    GROUP BY \"Product line\"\n),\nOverallAvgMetrics AS (\n    SELECT AVG(total_sales) AS overall_avg_sales,\n           AVG(gross_margin_percentage) AS overall_avg_gross_margin_percentage\n    FROM ProductLineMetrics\n)\nSELECT plm.\"Product line\",\n       plm.total_sales,\n       plm.total_gross_income,\n       plm.gross_margin_percentage\nFROM ProductLineMetrics plm, OverallAvgMetrics oam\nWHERE plm.gross_margin_percentage < oam.overall_avg_gross_margin_percentage\n  AND plm.total_sales < oam.overall_avg_sales\nORDER BY plm.gross_margin_percentage ASC, plm.total_sales ASC",
    "generated_sql": "WITH AllData AS (\n    SELECT * FROM SuperMarket_Analysis_part1\n    UNION ALL\n    SELECT * FROM SuperMarket_Analysis_part2\n    UNION ALL\n    SELECT * FROM SuperMarket_Analysis_part3\n),\nOverallAvg AS (\n    SELECT AVG(Sales) AS avg_sales,\n           AVG(\"gross margin percentage\") AS avg_gross_margin\n    FROM AllData\n),\nProductLineStats AS (\n    SELECT \"Product line\",\n           AVG(Sales) AS avg_sales,\n           AVG(\"gross margin percentage\") AS avg_gross_margin\n    FROM AllData\n    GROUP BY \"Product line\"\n)\nSELECT pls.\"Product line\",\n       pls.avg_sales,\n       pls.avg_gross_margin\nFROM ProductLineStats pls\nJOIN OverallAvg oa\n  ON 1=1\nWHERE pls.avg_sales < oa.avg_sales\n  AND pls.avg_gross_margin < oa.avg_gross_margin;",
    "is_success": false,
    "reason": "SQL不匹配，关键词相似度: 0.45",
    "execution_time": 13.45546817779541,
    "timestamp": "2025-10-12T02:01:08.214265"
  }
]